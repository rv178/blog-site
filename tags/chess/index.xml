<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>chess on rv178</title>
    <link>https://rv178.is-a.dev/tags/chess/</link>
    <description>Recent content in chess on rv178</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 18 Oct 2022 21:53:57 +0530</lastBuildDate><atom:link href="https://rv178.is-a.dev/tags/chess/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hyperbola Quintessence in Rust</title>
      <link>https://rv178.is-a.dev/posts/hyperbola-quintessence-in-rust/</link>
      <pubDate>Tue, 18 Oct 2022 21:53:57 +0530</pubDate>
      
      <guid>https://rv178.is-a.dev/posts/hyperbola-quintessence-in-rust/</guid>
      <description>Introduction Welcome to part I&amp;rsquo;m-not-keeping-track-of-this of my dev-blog series on writing a chess engine. I never actually intended this to be a series but I hope you, the reader, can learn something new from this blog. Like always, suggestions are welcome!
Hyperbola quintessence? This is the definition from chessprogramming.org:
Hyperbola Quintessence applies the o^(o-2r)-trick also for vertical or diagonal negative Rays - by reversing the bit-order of up to one bit per rank or byte with a vertical flip aka x86-64 bswap.</description>
    </item>
    
    <item>
      <title>Bitboards in Rust</title>
      <link>https://rv178.is-a.dev/posts/bitboards-in-rust/</link>
      <pubDate>Wed, 28 Sep 2022 21:46:16 +0530</pubDate>
      
      <guid>https://rv178.is-a.dev/posts/bitboards-in-rust/</guid>
      <description>Introduction Hello there! I haven&amp;rsquo;t posted in a while because I was working on my chess engine. Specifically, representing the pieces as bitboards. Now you may ask what a bitboard is. You can use bitboards to represent a chess board in a piece-centric manner. What is so special about bitboards then? Doesn&amp;rsquo;t a piece list do the same thing? Well, representing a bitboard only requires a single unsigned 64 bit integer!</description>
    </item>
    
    <item>
      <title>FEN String Parsing in Rust</title>
      <link>https://rv178.is-a.dev/posts/fen-string-parsing-in-rust/</link>
      <pubDate>Wed, 29 Jun 2022 14:54:23 +0530</pubDate>
      
      <guid>https://rv178.is-a.dev/posts/fen-string-parsing-in-rust/</guid>
      <description>I finally finished the FEN string parsing part of my chess engine after days of procrastinating and I just wanted to share my experience with everyone.
So a FEN string looks like this:
rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 This is the FEN string of the starting position in standard chess. It looks like random crap at first glance but this string conveys a lot of information.
So let&amp;rsquo;s divide it into parts.</description>
    </item>
    
    <item>
      <title>Learning Chess</title>
      <link>https://rv178.is-a.dev/posts/learning-chess/</link>
      <pubDate>Fri, 03 Jun 2022 12:10:51 +0530</pubDate>
      
      <guid>https://rv178.is-a.dev/posts/learning-chess/</guid>
      <description>So a while ago after being absolutely destroyed by a friend in a game of chess, I decided to actually learn the game.
What&amp;rsquo;s chess? Chess is a popular game of strategy where two players play against each other. It involves a chess board containing 64 squares and 16 pieces on each side.
The players have a pair of rooks, bishops and knights. They also have eight pawns, a queen and a king.</description>
    </item>
    
  </channel>
</rss>
